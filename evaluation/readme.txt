these three evaluation models are used to measure the F1 scores for node, drawing, edges

For those drawings that are not nodes or are not nodes (let's call them "decorations" for now), I think we can ignore them for now because they are not part of the graph structure we want to capture. We are then left with A) drawings that belong to a node (accompanied by some text) and B) drawings that are nodes themselves (with no text involved) and have at least one connection to other nodes. We can try to see which is the case by using OCR bounding boxes as "temporary" ground truth. We are post-processing the OCR's BB's and if they are close enough to each other and one is on top of the other we will join them together. Then, if ViT detects a drawing and its bounding box is constrained within the post-processed OCR BB, we can assume that it is part of that node. This would be the most straightforward and simple case to detect, but for more complex cases we can use the candidate edges output by the opencv pipeline. If we have a candidate edge that is not close to a post-processed OCR BB, we are currently discarding it. We can now add detected drawings (over a certain threshold score) to the list and check candidate edges that are close enough to these drawings. In a way it will be like validating candidate edges and drawings at once if they are close enough to each other. Regarding the annotation data, we could initially include the drawing node instead of the drawing that is part of the node (just B instead of A). If a drawing is part of a text node, it doesn't change the structure of the graph, it only affects the graph size (i.e. bounding box) of the node. If a graph is an independent node, then it will affect the structure of the graph, and I think it should be prioritized. We can include these nodes in annotations (spreadsheet) and try to detect them by double validation with edge candidates.